{"ast":null,"code":"// const API_URL = \"http://localhost:8000\";\n// Load planets and return as JSON.\nasync function httpGetPlanets() {\n  // server and client are on diff ports\n  // const response = await fetch(`${API_URL}/planets`);\n  const response = await fetch(\"http://localhost:8000/planets\");\n  const data = await response.json();\n  return data;\n}\n\nasync function httpGetLaunches() {// TODO: Once API is ready.\n  // Load launches, sort by flight number, and return as JSON.\n}\n\nasync function httpSubmitLaunch(launch) {// TODO: Once API is ready.\n  // Submit given launch data to launch system.\n}\n\nasync function httpAbortLaunch(id) {// TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };","map":{"version":3,"sources":["/Users/rob/Desktop/fullstack-nasa-project/client/src/hooks/requests.js"],"names":["httpGetPlanets","response","fetch","data","json","httpGetLaunches","httpSubmitLaunch","launch","httpAbortLaunch","id"],"mappings":"AAAA;AAEA;AACA,eAAeA,cAAf,GAAgC;AAC9B;AACA;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAAD,CAA5B;AACA,QAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,SAAOD,IAAP;AACD;;AAED,eAAeE,eAAf,GAAiC,CAC/B;AACA;AACD;;AAED,eAAeC,gBAAf,CAAgCC,MAAhC,EAAwC,CACtC;AACA;AACD;;AAED,eAAeC,eAAf,CAA+BC,EAA/B,EAAmC,CACjC;AACA;AACD;;AAED,SAAST,cAAT,EAAyBK,eAAzB,EAA0CC,gBAA1C,EAA4DE,eAA5D","sourcesContent":["// const API_URL = \"http://localhost:8000\";\n\n// Load planets and return as JSON.\nasync function httpGetPlanets() {\n  // server and client are on diff ports\n  // const response = await fetch(`${API_URL}/planets`);\n  const response = await fetch(\"http://localhost:8000/planets\");\n  const data = await response.json();\n  return data;\n}\n\nasync function httpGetLaunches() {\n  // TODO: Once API is ready.\n  // Load launches, sort by flight number, and return as JSON.\n}\n\nasync function httpSubmitLaunch(launch) {\n  // TODO: Once API is ready.\n  // Submit given launch data to launch system.\n}\n\nasync function httpAbortLaunch(id) {\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };\n"]},"metadata":{},"sourceType":"module"}